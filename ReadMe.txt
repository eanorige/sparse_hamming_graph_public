This repository contains the source code of the network-on-chip cost and performance prediction toolchain that was used in the paper "Sparse Hamming Graph: A Customizable Network-on-Chip Topology" (see https://arxiv.org/abs/2211.13980). Execute the following commands to reproduce all results used in the paper:

cd src
python3 produce_dac23_paper_plots.py

The resulting plots (Fig. 6 from the paper) will be stored in the "plots" directory.

The following list describes the directories in this repository:
- booksim2: A copy of the BookSim2 cycle-accurate network-on-chip simulator. See https://github.com/booksim/booksim2.
- bs_logs: Logfiles of the BookSim2 simulations that are automatically launched from within the toolchain.
- bs_results: Results of the BookSim2 simulations that are automatically launched from within the toolchain.
- components/tiles: Descriptions of tiles that are automatically generated by the toolchain.
- components_embedded/tiles: Descriptions of tiles that are embedded into the grid of unit cells that forms the core part of our custom network-on-chip model (See Section IV in the paper).
- components_embedded/modules: Descriptions of modules (groups of tiles) that are embedded into the grid of unit cells that forms the core part of our custom network-on-chip model (See Section IV in the paper).
- eval_results: Cost- and performance-predictions from our toolchain.
- inputs: Inputs that specify the technology node in which the chip is fabricated as well as the on-chip transport protocol (e.g. AXI).
- plots: Plots that visualize the cost- and performance-predictions from our toolchain.

For any questions regarding the network-on-chip cost- and performance-prediction toolchain, feel free to reach out to patrick.iff@inf.ethz.ch.
